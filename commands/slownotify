#!/usr/bin/env bash

function slownotify() {
    source "$DOROTHY/sources/bash.bash"

    # Default timeout (in seconds)
    DEFAULT_TIMEOUT=5

    # Parse command line arguments
    timeout=$DEFAULT_TIMEOUT  # Set default timeout
    custom_message=false
    cmd=()  # Initialize command array

    while (( "$#" )); do
    case "$1" in
        -t)
        if [ -n "$2" ] && [ "${2:0:1}" != "-" ]; then
            timeout=$2
            shift 2
        else
            echo "Error: Argument for $1 is missing" >&2
            exit 1
        fi
        ;;
        -m)
        if [ -n "$2" ] && [ "${2:0:1}" != "-" ]; then
            message=$2
            custom_message=true
            shift 2
        else
            echo "Error: Argument for $1 is missing" >&2
            exit 1
        fi
        ;;
        --) # End of all options
        shift
        break 2
        ;;
        -*|--*=) # Unsupported flags
        echo "Error: Unsupported flag $1" >&2
        exit 1
        ;;
        *) # Preserve positional arguments
        cmd+=("$1")
        shift
        ;;
    esac
    done

    # Append remaining arguments after '--' to cmd array
    cmd+=("$@")

    # Check if any command is specified
    if [ ${#cmd[@]} -eq 0 ]; then
    echo "Usage: $(basename $0) [ -t <timeout in seconds> ] [ -m <custom message> ] <command>"
    exit 1
    fi

     # Start the command and time its execution
    start_time=$(date +%s)
    set +e
    "${cmd[@]}"

    return_status=$?
    set -e
    end_time=$(date +%s)

    # Calculate the duration using bc for floating point support
    duration=$(echo "$end_time - $start_time" | bc)

    # Check if duration exceeded the timeout using bc
    if [ $(echo "$duration >= $timeout" | bc) -eq 1 ]; then

       # Set default message if no custom message is provided
        if [ "$custom_message" != "true" ]; then
            message="command finished with status ${return_status} after ${duration}s: ${cmd[*]}"
        fi

        echo "$message"
        notify "$message"
    fi
 }

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	slownotify "$@"
fi